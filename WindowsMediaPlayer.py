# Copyright (C) 2003 - 2006 The Board of Regents of the University of Wisconsin System 
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# This module was generated by the wx.activex.GernerateAXModule class
# (See also the genaxmodule script.)

import wx
import wx.activex

clsID = '{22D6F312-B0F6-11D0-94AB-0080C74C7E95}'
progID = 'MediaPlayer.MediaPlayer.1'

# Create eventTypes and event binders
wxEVT_DVDNotify = wx.activex.RegisterActiveXEvent('DVDNotify')
wxEVT_EndOfStream = wx.activex.RegisterActiveXEvent('EndOfStream')
wxEVT_KeyDown = wx.activex.RegisterActiveXEvent('KeyDown')
wxEVT_KeyUp = wx.activex.RegisterActiveXEvent('KeyUp')
wxEVT_KeyPress = wx.activex.RegisterActiveXEvent('KeyPress')
wxEVT_MouseMove = wx.activex.RegisterActiveXEvent('MouseMove')
wxEVT_MouseDown = wx.activex.RegisterActiveXEvent('MouseDown')
wxEVT_MouseUp = wx.activex.RegisterActiveXEvent('MouseUp')
wxEVT_Click = wx.activex.RegisterActiveXEvent('Click')
wxEVT_DblClick = wx.activex.RegisterActiveXEvent('DblClick')
wxEVT_OpenStateChange = wx.activex.RegisterActiveXEvent('OpenStateChange')
wxEVT_PlayStateChange = wx.activex.RegisterActiveXEvent('PlayStateChange')
wxEVT_ScriptCommand = wx.activex.RegisterActiveXEvent('ScriptCommand')
wxEVT_Buffering = wx.activex.RegisterActiveXEvent('Buffering')
wxEVT_Error = wx.activex.RegisterActiveXEvent('Error')
wxEVT_MarkerHit = wx.activex.RegisterActiveXEvent('MarkerHit')
wxEVT_Warning = wx.activex.RegisterActiveXEvent('Warning')
wxEVT_NewStream = wx.activex.RegisterActiveXEvent('NewStream')
wxEVT_Disconnect = wx.activex.RegisterActiveXEvent('Disconnect')
wxEVT_PositionChange = wx.activex.RegisterActiveXEvent('PositionChange')
wxEVT_DisplayModeChange = wx.activex.RegisterActiveXEvent('DisplayModeChange')
wxEVT_ReadyStateChange = wx.activex.RegisterActiveXEvent('ReadyStateChange')

EVT_DVDNotify = wx.PyEventBinder(wxEVT_DVDNotify, 1)
EVT_EndOfStream = wx.PyEventBinder(wxEVT_EndOfStream, 1)
EVT_KeyDown = wx.PyEventBinder(wxEVT_KeyDown, 1)
EVT_KeyUp = wx.PyEventBinder(wxEVT_KeyUp, 1)
EVT_KeyPress = wx.PyEventBinder(wxEVT_KeyPress, 1)
EVT_MouseMove = wx.PyEventBinder(wxEVT_MouseMove, 1)
EVT_MouseDown = wx.PyEventBinder(wxEVT_MouseDown, 1)
EVT_MouseUp = wx.PyEventBinder(wxEVT_MouseUp, 1)
EVT_Click = wx.PyEventBinder(wxEVT_Click, 1)
EVT_DblClick = wx.PyEventBinder(wxEVT_DblClick, 1)
EVT_OpenStateChange = wx.PyEventBinder(wxEVT_OpenStateChange, 1)
EVT_PlayStateChange = wx.PyEventBinder(wxEVT_PlayStateChange, 1)
EVT_ScriptCommand = wx.PyEventBinder(wxEVT_ScriptCommand, 1)
EVT_Buffering = wx.PyEventBinder(wxEVT_Buffering, 1)
EVT_Error = wx.PyEventBinder(wxEVT_Error, 1)
EVT_MarkerHit = wx.PyEventBinder(wxEVT_MarkerHit, 1)
EVT_Warning = wx.PyEventBinder(wxEVT_Warning, 1)
EVT_NewStream = wx.PyEventBinder(wxEVT_NewStream, 1)
EVT_Disconnect = wx.PyEventBinder(wxEVT_Disconnect, 1)
EVT_PositionChange = wx.PyEventBinder(wxEVT_PositionChange, 1)
EVT_DisplayModeChange = wx.PyEventBinder(wxEVT_DisplayModeChange, 1)
EVT_ReadyStateChange = wx.PyEventBinder(wxEVT_ReadyStateChange, 1)


# Derive a new class from ActiveXWindow
class WindowsMediaPlayer(wx.activex.ActiveXWindow):
    def __init__(self, parent, ID=-1, pos=wx.DefaultPosition,
                 size=wx.DefaultSize, style=0, name='WindowsMediaPlayer'):
        wx.activex.ActiveXWindow.__init__(self, parent,
            wx.activex.CLSID('{22D6F312-B0F6-11D0-94AB-0080C74C7E95}'),
            ID, pos, size, style, name)
        
    # Methods exported by the ActiveX object
    def QueryInterface(self, riid):
        return self.CallAXMethod('QueryInterface', riid)

    def AddRef(self):
        return self.CallAXMethod('AddRef')

    def Release(self):
        return self.CallAXMethod('Release')

    def GetTypeInfoCount(self):
        return self.CallAXMethod('GetTypeInfoCount')

    def GetTypeInfo(self, itinfo, lcid):
        return self.CallAXMethod('GetTypeInfo', itinfo, lcid)

    def GetIDsOfNames(self, riid, rgszNames, cNames, lcid):
        return self.CallAXMethod('GetIDsOfNames', riid, rgszNames, cNames, lcid)

    def Invoke(self, dispidMember, riid, lcid, wFlags, pdispparams):
        return self.CallAXMethod('Invoke', dispidMember, riid, lcid, wFlags, pdispparams)

    def Play(self):
        return self.CallAXMethod('Play')

    def Stop(self):
        return self.CallAXMethod('Stop')

    def Pause(self):
        return self.CallAXMethod('Pause')

    def GetMarkerTime(self, MarkerNum):
        return self.CallAXMethod('GetMarkerTime', MarkerNum)

    def GetMarkerName(self, MarkerNum):
        return self.CallAXMethod('GetMarkerName', MarkerNum)

    def AboutBox(self):
        return self.CallAXMethod('AboutBox')

    def GetCodecInstalled(self, CodecNum):
        return self.CallAXMethod('GetCodecInstalled', CodecNum)

    def GetCodecDescription(self, CodecNum):
        return self.CallAXMethod('GetCodecDescription', CodecNum)

    def GetCodecURL(self, CodecNum):
        return self.CallAXMethod('GetCodecURL', CodecNum)

    def GetMoreInfoURL(self, MoreInfoType):
        return self.CallAXMethod('GetMoreInfoURL', MoreInfoType)

    def GetMediaInfoString(self, MediaInfoType):
        return self.CallAXMethod('GetMediaInfoString', MediaInfoType)

    def Cancel(self):
        return self.CallAXMethod('Cancel')

    def Open(self, bstrFileName):
        return self.CallAXMethod('Open', bstrFileName)

    def IsSoundCardEnabled(self):
        return self.CallAXMethod('IsSoundCardEnabled')

    def Next(self):
        return self.CallAXMethod('Next')

    def Previous(self):
        return self.CallAXMethod('Previous')

    def StreamSelect(self, StreamNum):
        return self.CallAXMethod('StreamSelect', StreamNum)

    def FastForward(self):
        return self.CallAXMethod('FastForward')

    def FastReverse(self):
        return self.CallAXMethod('FastReverse')

    def GetStreamName(self, StreamNum):
        return self.CallAXMethod('GetStreamName', StreamNum)

    def GetStreamGroup(self, StreamNum):
        return self.CallAXMethod('GetStreamGroup', StreamNum)

    def GetStreamSelected(self, StreamNum):
        return self.CallAXMethod('GetStreamSelected', StreamNum)

    def GetMediaParameter(self, EntryNum, bstrParameterName):
        return self.CallAXMethod('GetMediaParameter', EntryNum, bstrParameterName)

    def GetMediaParameterName(self, EntryNum, Index):
        return self.CallAXMethod('GetMediaParameterName', EntryNum, Index)

    def GetCurrentEntry(self):
        return self.CallAXMethod('GetCurrentEntry')

    def SetCurrentEntry(self, EntryNumber):
        return self.CallAXMethod('SetCurrentEntry', EntryNumber)

    def ShowDialog(self, mpDialogIndex):
        return self.CallAXMethod('ShowDialog', mpDialogIndex)

    # Getters, Setters and properties
    def _get_CurrentPosition(self):
        return self.GetAXProp('CurrentPosition')
    def _set_CurrentPosition(self, CurrentPosition):
        self.SetAXProp('CurrentPosition', CurrentPosition)
    currentposition = property(_get_CurrentPosition, _set_CurrentPosition)

    def _get_Duration(self):
        return self.GetAXProp('Duration')
    duration = property(_get_Duration, None)

    def _get_ImageSourceWidth(self):
        return self.GetAXProp('ImageSourceWidth')
    imagesourcewidth = property(_get_ImageSourceWidth, None)

    def _get_ImageSourceHeight(self):
        return self.GetAXProp('ImageSourceHeight')
    imagesourceheight = property(_get_ImageSourceHeight, None)

    def _get_MarkerCount(self):
        return self.GetAXProp('MarkerCount')
    markercount = property(_get_MarkerCount, None)

    def _get_CanScan(self):
        return self.GetAXProp('CanScan')
    canscan = property(_get_CanScan, None)

    def _get_CanSeek(self):
        return self.GetAXProp('CanSeek')
    canseek = property(_get_CanSeek, None)

    def _get_CanSeekToMarkers(self):
        return self.GetAXProp('CanSeekToMarkers')
    canseektomarkers = property(_get_CanSeekToMarkers, None)

    def _get_CurrentMarker(self):
        return self.GetAXProp('CurrentMarker')
    def _set_CurrentMarker(self, CurrentMarker):
        self.SetAXProp('CurrentMarker', CurrentMarker)
    currentmarker = property(_get_CurrentMarker, _set_CurrentMarker)

    def _get_FileName(self):
        return self.GetAXProp('FileName')
    def _set_FileName(self, FileName):
        self.SetAXProp('FileName', FileName)
    filename = property(_get_FileName, _set_FileName)

    def _get_SourceLink(self):
        return self.GetAXProp('SourceLink')
    sourcelink = property(_get_SourceLink, None)

    def _get_CreationDate(self):
        return self.GetAXProp('CreationDate')
    creationdate = property(_get_CreationDate, None)

    def _get_ErrorCorrection(self):
        return self.GetAXProp('ErrorCorrection')
    errorcorrection = property(_get_ErrorCorrection, None)

    def _get_Bandwidth(self):
        return self.GetAXProp('Bandwidth')
    bandwidth = property(_get_Bandwidth, None)

    def _get_SourceProtocol(self):
        return self.GetAXProp('SourceProtocol')
    sourceprotocol = property(_get_SourceProtocol, None)

    def _get_ReceivedPackets(self):
        return self.GetAXProp('ReceivedPackets')
    receivedpackets = property(_get_ReceivedPackets, None)

    def _get_RecoveredPackets(self):
        return self.GetAXProp('RecoveredPackets')
    recoveredpackets = property(_get_RecoveredPackets, None)

    def _get_LostPackets(self):
        return self.GetAXProp('LostPackets')
    lostpackets = property(_get_LostPackets, None)

    def _get_ReceptionQuality(self):
        return self.GetAXProp('ReceptionQuality')
    receptionquality = property(_get_ReceptionQuality, None)

    def _get_BufferingCount(self):
        return self.GetAXProp('BufferingCount')
    bufferingcount = property(_get_BufferingCount, None)

    def _get_IsBroadcast(self):
        return self.GetAXProp('IsBroadcast')
    isbroadcast = property(_get_IsBroadcast, None)

    def _get_BufferingProgress(self):
        return self.GetAXProp('BufferingProgress')
    bufferingprogress = property(_get_BufferingProgress, None)

    def _get_ChannelName(self):
        return self.GetAXProp('ChannelName')
    channelname = property(_get_ChannelName, None)

    def _get_ChannelDescription(self):
        return self.GetAXProp('ChannelDescription')
    channeldescription = property(_get_ChannelDescription, None)

    def _get_ChannelURL(self):
        return self.GetAXProp('ChannelURL')
    channelurl = property(_get_ChannelURL, None)

    def _get_ContactAddress(self):
        return self.GetAXProp('ContactAddress')
    contactaddress = property(_get_ContactAddress, None)

    def _get_ContactPhone(self):
        return self.GetAXProp('ContactPhone')
    contactphone = property(_get_ContactPhone, None)

    def _get_ContactEmail(self):
        return self.GetAXProp('ContactEmail')
    contactemail = property(_get_ContactEmail, None)

    def _get_BufferingTime(self):
        return self.GetAXProp('BufferingTime')
    def _set_BufferingTime(self, BufferingTime):
        self.SetAXProp('BufferingTime', BufferingTime)
    bufferingtime = property(_get_BufferingTime, _set_BufferingTime)

    def _get_AutoStart(self):
        return self.GetAXProp('AutoStart')
    def _set_AutoStart(self, AutoStart):
        self.SetAXProp('AutoStart', AutoStart)
    autostart = property(_get_AutoStart, _set_AutoStart)

    def _get_AutoRewind(self):
        return self.GetAXProp('AutoRewind')
    def _set_AutoRewind(self, AutoRewind):
        self.SetAXProp('AutoRewind', AutoRewind)
    autorewind = property(_get_AutoRewind, _set_AutoRewind)

    def _get_Rate(self):
        return self.GetAXProp('Rate')
    def _set_Rate(self, Rate):
        self.SetAXProp('Rate', Rate)
    rate = property(_get_Rate, _set_Rate)

    def _get_SendKeyboardEvents(self):
        return self.GetAXProp('SendKeyboardEvents')
    def _set_SendKeyboardEvents(self, SendKeyboardEvents):
        self.SetAXProp('SendKeyboardEvents', SendKeyboardEvents)
    sendkeyboardevents = property(_get_SendKeyboardEvents, _set_SendKeyboardEvents)

    def _get_SendMouseClickEvents(self):
        return self.GetAXProp('SendMouseClickEvents')
    def _set_SendMouseClickEvents(self, SendMouseClickEvents):
        self.SetAXProp('SendMouseClickEvents', SendMouseClickEvents)
    sendmouseclickevents = property(_get_SendMouseClickEvents, _set_SendMouseClickEvents)

    def _get_SendMouseMoveEvents(self):
        return self.GetAXProp('SendMouseMoveEvents')
    def _set_SendMouseMoveEvents(self, SendMouseMoveEvents):
        self.SetAXProp('SendMouseMoveEvents', SendMouseMoveEvents)
    sendmousemoveevents = property(_get_SendMouseMoveEvents, _set_SendMouseMoveEvents)

    def _get_PlayCount(self):
        return self.GetAXProp('PlayCount')
    def _set_PlayCount(self, PlayCount):
        self.SetAXProp('PlayCount', PlayCount)
    playcount = property(_get_PlayCount, _set_PlayCount)

    def _get_ClickToPlay(self):
        return self.GetAXProp('ClickToPlay')
    def _set_ClickToPlay(self, ClickToPlay):
        self.SetAXProp('ClickToPlay', ClickToPlay)
    clicktoplay = property(_get_ClickToPlay, _set_ClickToPlay)

    def _get_AllowScan(self):
        return self.GetAXProp('AllowScan')
    def _set_AllowScan(self, AllowScan):
        self.SetAXProp('AllowScan', AllowScan)
    allowscan = property(_get_AllowScan, _set_AllowScan)

    def _get_EnableContextMenu(self):
        return self.GetAXProp('EnableContextMenu')
    def _set_EnableContextMenu(self, EnableContextMenu):
        self.SetAXProp('EnableContextMenu', EnableContextMenu)
    enablecontextmenu = property(_get_EnableContextMenu, _set_EnableContextMenu)

    def _get_CursorType(self):
        return self.GetAXProp('CursorType')
    def _set_CursorType(self, CursorType):
        self.SetAXProp('CursorType', CursorType)
    cursortype = property(_get_CursorType, _set_CursorType)

    def _get_CodecCount(self):
        return self.GetAXProp('CodecCount')
    codeccount = property(_get_CodecCount, None)

    def _get_AllowChangeDisplaySize(self):
        return self.GetAXProp('AllowChangeDisplaySize')
    def _set_AllowChangeDisplaySize(self, AllowChangeDisplaySize):
        self.SetAXProp('AllowChangeDisplaySize', AllowChangeDisplaySize)
    allowchangedisplaysize = property(_get_AllowChangeDisplaySize, _set_AllowChangeDisplaySize)

    def _get_IsDurationValid(self):
        return self.GetAXProp('IsDurationValid')
    isdurationvalid = property(_get_IsDurationValid, None)

    def _get_OpenState(self):
        return self.GetAXProp('OpenState')
    openstate = property(_get_OpenState, None)

    def _get_SendOpenStateChangeEvents(self):
        return self.GetAXProp('SendOpenStateChangeEvents')
    def _set_SendOpenStateChangeEvents(self, SendOpenStateChangeEvents):
        self.SetAXProp('SendOpenStateChangeEvents', SendOpenStateChangeEvents)
    sendopenstatechangeevents = property(_get_SendOpenStateChangeEvents, _set_SendOpenStateChangeEvents)

    def _get_SendWarningEvents(self):
        return self.GetAXProp('SendWarningEvents')
    def _set_SendWarningEvents(self, SendWarningEvents):
        self.SetAXProp('SendWarningEvents', SendWarningEvents)
    sendwarningevents = property(_get_SendWarningEvents, _set_SendWarningEvents)

    def _get_SendErrorEvents(self):
        return self.GetAXProp('SendErrorEvents')
    def _set_SendErrorEvents(self, SendErrorEvents):
        self.SetAXProp('SendErrorEvents', SendErrorEvents)
    senderrorevents = property(_get_SendErrorEvents, _set_SendErrorEvents)

    def _get_PlayState(self):
        return self.GetAXProp('PlayState')
    playstate = property(_get_PlayState, None)

    def _get_SendPlayStateChangeEvents(self):
        return self.GetAXProp('SendPlayStateChangeEvents')
    def _set_SendPlayStateChangeEvents(self, SendPlayStateChangeEvents):
        self.SetAXProp('SendPlayStateChangeEvents', SendPlayStateChangeEvents)
    sendplaystatechangeevents = property(_get_SendPlayStateChangeEvents, _set_SendPlayStateChangeEvents)

    def _get_DisplaySize(self):
        return self.GetAXProp('DisplaySize')
    def _set_DisplaySize(self, DisplaySize):
        self.SetAXProp('DisplaySize', DisplaySize)
    displaysize = property(_get_DisplaySize, _set_DisplaySize)

    def _get_InvokeURLs(self):
        return self.GetAXProp('InvokeURLs')
    def _set_InvokeURLs(self, InvokeURLs):
        self.SetAXProp('InvokeURLs', InvokeURLs)
    invokeurls = property(_get_InvokeURLs, _set_InvokeURLs)

    def _get_BaseURL(self):
        return self.GetAXProp('BaseURL')
    def _set_BaseURL(self, BaseURL):
        self.SetAXProp('BaseURL', BaseURL)
    baseurl = property(_get_BaseURL, _set_BaseURL)

    def _get_DefaultFrame(self):
        return self.GetAXProp('DefaultFrame')
    def _set_DefaultFrame(self, DefaultFrame):
        self.SetAXProp('DefaultFrame', DefaultFrame)
    defaultframe = property(_get_DefaultFrame, _set_DefaultFrame)

    def _get_HasError(self):
        return self.GetAXProp('HasError')
    haserror = property(_get_HasError, None)

    def _get_ErrorDescription(self):
        return self.GetAXProp('ErrorDescription')
    errordescription = property(_get_ErrorDescription, None)

    def _get_ErrorCode(self):
        return self.GetAXProp('ErrorCode')
    errorcode = property(_get_ErrorCode, None)

    def _get_AnimationAtStart(self):
        return self.GetAXProp('AnimationAtStart')
    def _set_AnimationAtStart(self, AnimationAtStart):
        self.SetAXProp('AnimationAtStart', AnimationAtStart)
    animationatstart = property(_get_AnimationAtStart, _set_AnimationAtStart)

    def _get_TransparentAtStart(self):
        return self.GetAXProp('TransparentAtStart')
    def _set_TransparentAtStart(self, TransparentAtStart):
        self.SetAXProp('TransparentAtStart', TransparentAtStart)
    transparentatstart = property(_get_TransparentAtStart, _set_TransparentAtStart)

    def _get_Volume(self):
        return self.GetAXProp('Volume')
    def _set_Volume(self, Volume):
        self.SetAXProp('Volume', Volume)
    volume = property(_get_Volume, _set_Volume)

    def _get_Balance(self):
        return self.GetAXProp('Balance')
    def _set_Balance(self, Balance):
        self.SetAXProp('Balance', Balance)
    balance = property(_get_Balance, _set_Balance)

    def _get_ReadyState(self):
        return self.GetAXProp('ReadyState')
    readystate = property(_get_ReadyState, None)

    def _get_SelectionStart(self):
        return self.GetAXProp('SelectionStart')
    def _set_SelectionStart(self, SelectionStart):
        self.SetAXProp('SelectionStart', SelectionStart)
    selectionstart = property(_get_SelectionStart, _set_SelectionStart)

    def _get_SelectionEnd(self):
        return self.GetAXProp('SelectionEnd')
    def _set_SelectionEnd(self, SelectionEnd):
        self.SetAXProp('SelectionEnd', SelectionEnd)
    selectionend = property(_get_SelectionEnd, _set_SelectionEnd)

    def _get_ShowDisplay(self):
        return self.GetAXProp('ShowDisplay')
    def _set_ShowDisplay(self, ShowDisplay):
        self.SetAXProp('ShowDisplay', ShowDisplay)
    showdisplay = property(_get_ShowDisplay, _set_ShowDisplay)

    def _get_ShowControls(self):
        return self.GetAXProp('ShowControls')
    def _set_ShowControls(self, ShowControls):
        self.SetAXProp('ShowControls', ShowControls)
    showcontrols = property(_get_ShowControls, _set_ShowControls)

    def _get_ShowPositionControls(self):
        return self.GetAXProp('ShowPositionControls')
    def _set_ShowPositionControls(self, ShowPositionControls):
        self.SetAXProp('ShowPositionControls', ShowPositionControls)
    showpositioncontrols = property(_get_ShowPositionControls, _set_ShowPositionControls)

    def _get_ShowTracker(self):
        return self.GetAXProp('ShowTracker')
    def _set_ShowTracker(self, ShowTracker):
        self.SetAXProp('ShowTracker', ShowTracker)
    showtracker = property(_get_ShowTracker, _set_ShowTracker)

    def _get_EnablePositionControls(self):
        return self.GetAXProp('EnablePositionControls')
    def _set_EnablePositionControls(self, EnablePositionControls):
        self.SetAXProp('EnablePositionControls', EnablePositionControls)
    enablepositioncontrols = property(_get_EnablePositionControls, _set_EnablePositionControls)

    def _get_EnableTracker(self):
        return self.GetAXProp('EnableTracker')
    def _set_EnableTracker(self, EnableTracker):
        self.SetAXProp('EnableTracker', EnableTracker)
    enabletracker = property(_get_EnableTracker, _set_EnableTracker)

    def _get_Enabled(self):
        return self.GetAXProp('Enabled')
    def _set_Enabled(self, Enabled):
        self.SetAXProp('Enabled', Enabled)
    enabled = property(_get_Enabled, _set_Enabled)

    def _get_DisplayForeColor(self):
        return self.GetAXProp('DisplayForeColor')
    def _set_DisplayForeColor(self, DisplayForeColor):
        self.SetAXProp('DisplayForeColor', DisplayForeColor)
    displayforecolor = property(_get_DisplayForeColor, _set_DisplayForeColor)

    def _get_DisplayBackColor(self):
        return self.GetAXProp('DisplayBackColor')
    def _set_DisplayBackColor(self, DisplayBackColor):
        self.SetAXProp('DisplayBackColor', DisplayBackColor)
    displaybackcolor = property(_get_DisplayBackColor, _set_DisplayBackColor)

    def _get_DisplayMode(self):
        return self.GetAXProp('DisplayMode')
    def _set_DisplayMode(self, DisplayMode):
        self.SetAXProp('DisplayMode', DisplayMode)
    displaymode = property(_get_DisplayMode, _set_DisplayMode)

    def _get_VideoBorder3D(self):
        return self.GetAXProp('VideoBorder3D')
    def _set_VideoBorder3D(self, VideoBorder3D):
        self.SetAXProp('VideoBorder3D', VideoBorder3D)
    videoborder3d = property(_get_VideoBorder3D, _set_VideoBorder3D)

    def _get_VideoBorderWidth(self):
        return self.GetAXProp('VideoBorderWidth')
    def _set_VideoBorderWidth(self, VideoBorderWidth):
        self.SetAXProp('VideoBorderWidth', VideoBorderWidth)
    videoborderwidth = property(_get_VideoBorderWidth, _set_VideoBorderWidth)

    def _get_VideoBorderColor(self):
        return self.GetAXProp('VideoBorderColor')
    def _set_VideoBorderColor(self, VideoBorderColor):
        self.SetAXProp('VideoBorderColor', VideoBorderColor)
    videobordercolor = property(_get_VideoBorderColor, _set_VideoBorderColor)

    def _get_ShowGotoBar(self):
        return self.GetAXProp('ShowGotoBar')
    def _set_ShowGotoBar(self, ShowGotoBar):
        self.SetAXProp('ShowGotoBar', ShowGotoBar)
    showgotobar = property(_get_ShowGotoBar, _set_ShowGotoBar)

    def _get_ShowStatusBar(self):
        return self.GetAXProp('ShowStatusBar')
    def _set_ShowStatusBar(self, ShowStatusBar):
        self.SetAXProp('ShowStatusBar', ShowStatusBar)
    showstatusbar = property(_get_ShowStatusBar, _set_ShowStatusBar)

    def _get_ShowCaptioning(self):
        return self.GetAXProp('ShowCaptioning')
    def _set_ShowCaptioning(self, ShowCaptioning):
        self.SetAXProp('ShowCaptioning', ShowCaptioning)
    showcaptioning = property(_get_ShowCaptioning, _set_ShowCaptioning)

    def _get_ShowAudioControls(self):
        return self.GetAXProp('ShowAudioControls')
    def _set_ShowAudioControls(self, ShowAudioControls):
        self.SetAXProp('ShowAudioControls', ShowAudioControls)
    showaudiocontrols = property(_get_ShowAudioControls, _set_ShowAudioControls)

    def _get_CaptioningID(self):
        return self.GetAXProp('CaptioningID')
    def _set_CaptioningID(self, CaptioningID):
        self.SetAXProp('CaptioningID', CaptioningID)
    captioningid = property(_get_CaptioningID, _set_CaptioningID)

    def _get_Mute(self):
        return self.GetAXProp('Mute')
    def _set_Mute(self, Mute):
        self.SetAXProp('Mute', Mute)
    mute = property(_get_Mute, _set_Mute)

    def _get_CanPreview(self):
        return self.GetAXProp('CanPreview')
    canpreview = property(_get_CanPreview, None)

    def _get_PreviewMode(self):
        return self.GetAXProp('PreviewMode')
    def _set_PreviewMode(self, PreviewMode):
        self.SetAXProp('PreviewMode', PreviewMode)
    previewmode = property(_get_PreviewMode, _set_PreviewMode)

    def _get_HasMultipleItems(self):
        return self.GetAXProp('HasMultipleItems')
    hasmultipleitems = property(_get_HasMultipleItems, None)

    def _get_Language(self):
        return self.GetAXProp('Language')
    def _set_Language(self, Language):
        self.SetAXProp('Language', Language)
    language = property(_get_Language, _set_Language)

    def _get_AudioStream(self):
        return self.GetAXProp('AudioStream')
    def _set_AudioStream(self, AudioStream):
        self.SetAXProp('AudioStream', AudioStream)
    audiostream = property(_get_AudioStream, _set_AudioStream)

    def _get_SAMIStyle(self):
        return self.GetAXProp('SAMIStyle')
    def _set_SAMIStyle(self, SAMIStyle):
        self.SetAXProp('SAMIStyle', SAMIStyle)
    samistyle = property(_get_SAMIStyle, _set_SAMIStyle)

    def _get_SAMILang(self):
        return self.GetAXProp('SAMILang')
    def _set_SAMILang(self, SAMILang):
        self.SetAXProp('SAMILang', SAMILang)
    samilang = property(_get_SAMILang, _set_SAMILang)

    def _get_SAMIFileName(self):
        return self.GetAXProp('SAMIFileName')
    def _set_SAMIFileName(self, SAMIFileName):
        self.SetAXProp('SAMIFileName', SAMIFileName)
    samifilename = property(_get_SAMIFileName, _set_SAMIFileName)

    def _get_StreamCount(self):
        return self.GetAXProp('StreamCount')
    streamcount = property(_get_StreamCount, None)

    def _get_ClientId(self):
        return self.GetAXProp('ClientId')
    clientid = property(_get_ClientId, None)

    def _get_ConnectionSpeed(self):
        return self.GetAXProp('ConnectionSpeed')
    connectionspeed = property(_get_ConnectionSpeed, None)

    def _get_AutoSize(self):
        return self.GetAXProp('AutoSize')
    def _set_AutoSize(self, AutoSize):
        self.SetAXProp('AutoSize', AutoSize)
    autosize = property(_get_AutoSize, _set_AutoSize)

    def _get_EnableFullScreenControls(self):
        return self.GetAXProp('EnableFullScreenControls')
    def _set_EnableFullScreenControls(self, EnableFullScreenControls):
        self.SetAXProp('EnableFullScreenControls', EnableFullScreenControls)
    enablefullscreencontrols = property(_get_EnableFullScreenControls, _set_EnableFullScreenControls)

    def _get_ActiveMovie(self):
        return self.GetAXProp('ActiveMovie')
    activemovie = property(_get_ActiveMovie, None)

    def _get_NSPlay(self):
        return self.GetAXProp('NSPlay')
    nsplay = property(_get_NSPlay, None)

    def _get_WindowlessVideo(self):
        return self.GetAXProp('WindowlessVideo')
    def _set_WindowlessVideo(self, WindowlessVideo):
        self.SetAXProp('WindowlessVideo', WindowlessVideo)
    windowlessvideo = property(_get_WindowlessVideo, _set_WindowlessVideo)

    def _get_DVD(self):
        return self.GetAXProp('DVD')
    dvd = property(_get_DVD, None)

    def _get_EntryCount(self):
        return self.GetAXProp('EntryCount')
    entrycount = property(_get_EntryCount, None)

### Code added from old WindowsMediaPlayer.py by Rajas Sambhare, April 15, 2004
class constants:
	dvdMenu_Angle                 =0x6        # from enum DVDMenuIDConstants
	dvdMenu_Audio                 =0x5        # from enum DVDMenuIDConstants
	dvdMenu_Chapter               =0x7        # from enum DVDMenuIDConstants
	dvdMenu_Root                  =0x3        # from enum DVDMenuIDConstants
	dvdMenu_Subpicture            =0x4        # from enum DVDMenuIDConstants
	dvdMenu_Title                 =0x2        # from enum DVDMenuIDConstants
	mpFrames                      =0x1        # from enum MPDisplayModeConstants
	mpTime                        =0x0        # from enum MPDisplayModeConstants
	mpDefaultSize                 =0x0        # from enum MPDisplaySizeConstants
	mpDoubleSize                  =0x2        # from enum MPDisplaySizeConstants
	mpFitToSize                   =0x4        # from enum MPDisplaySizeConstants
	mpFullScreen                  =0x3        # from enum MPDisplaySizeConstants
	mpHalfSize                    =0x1        # from enum MPDisplaySizeConstants
	mpOneFourthScreen             =0x6        # from enum MPDisplaySizeConstants
	mpOneHalfScreen               =0x7        # from enum MPDisplaySizeConstants
	mpOneSixteenthScreen          =0x5        # from enum MPDisplaySizeConstants
	mpBannerImage                 =0xe        # from enum MPMediaInfoType
	mpBannerMoreInfo              =0xf        # from enum MPMediaInfoType
	mpClipAuthor                  =0x9        # from enum MPMediaInfoType
	mpClipCopyright               =0xa        # from enum MPMediaInfoType
	mpClipDescription             =0xc        # from enum MPMediaInfoType
	mpClipFilename                =0x7        # from enum MPMediaInfoType
	mpClipLogoIcon                =0xd        # from enum MPMediaInfoType
	mpClipRating                  =0xb        # from enum MPMediaInfoType
	mpClipTitle                   =0x8        # from enum MPMediaInfoType
	mpShowAuthor                  =0x2        # from enum MPMediaInfoType
	mpShowCopyright               =0x3        # from enum MPMediaInfoType
	mpShowDescription             =0x5        # from enum MPMediaInfoType
	mpShowFilename                =0x0        # from enum MPMediaInfoType
	mpShowLogoIcon                =0x6        # from enum MPMediaInfoType
	mpShowRating                  =0x4        # from enum MPMediaInfoType
	mpShowTitle                   =0x1        # from enum MPMediaInfoType
	mpWatermark                   =0x10       # from enum MPMediaInfoType
	mpBannerURL                   =0x2        # from enum MPMoreInfoType
	mpClipURL                     =0x1        # from enum MPMoreInfoType
	mpShowURL                     =0x0        # from enum MPMoreInfoType
	mpClosed                      =0x6        # from enum MPPlayStateConstants
	mpPaused                      =0x1        # from enum MPPlayStateConstants
	mpPlaying                     =0x2        # from enum MPPlayStateConstants
	mpScanForward                 =0x4        # from enum MPPlayStateConstants
	mpScanReverse                 =0x5        # from enum MPPlayStateConstants
	mpStopped                     =0x0        # from enum MPPlayStateConstants
	mpWaiting                     =0x3        # from enum MPPlayStateConstants
	mpReadyStateComplete          =0x4        # from enum MPReadyStateConstants
	mpReadyStateInteractive       =0x3        # from enum MPReadyStateConstants
	mpReadyStateLoading           =0x1        # from enum MPReadyStateConstants
	mpReadyStateUninitialized     =0x0        # from enum MPReadyStateConstants
	mpShowDialogContextMenu       =0x3        # from enum MPShowDialogConstants
	mpShowDialogHelp              =0x0        # from enum MPShowDialogConstants
	mpShowDialogOptions           =0x2        # from enum MPShowDialogConstants
	mpShowDialogStatistics        =0x1        # from enum MPShowDialogConstants
	amvComplete                   =0x4        # from enum ReadyStateConstants
	amvInteractive                =0x3        # from enum ReadyStateConstants
	amvLoading                    =0x1        # from enum ReadyStateConstants
	amvUninitialized              =0x0        # from enum ReadyStateConstants
### End Rajas Added Code

#  PROPERTIES
#  --------------------
#  currentposition
#      type:double  arg:double  canGet:True  canSet:True
#  
#  duration
#      type:double  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  imagesourcewidth
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  imagesourceheight
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  markercount
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  canscan
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  canseek
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  canseektomarkers
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  currentmarker
#      type:int  arg:int  canGet:True  canSet:True
#  
#  filename
#      type:string  arg:string  canGet:True  canSet:True
#  
#  sourcelink
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  creationdate
#      type:wx.DateTime  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  errorcorrection
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  bandwidth
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  sourceprotocol
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  receivedpackets
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  recoveredpackets
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  lostpackets
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  receptionquality
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  bufferingcount
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  isbroadcast
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  bufferingprogress
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  channelname
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  channeldescription
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  channelurl
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  contactaddress
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  contactphone
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  contactemail
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  bufferingtime
#      type:double  arg:double  canGet:True  canSet:True
#  
#  autostart
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  autorewind
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  rate
#      type:double  arg:double  canGet:True  canSet:True
#  
#  sendkeyboardevents
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  sendmouseclickevents
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  sendmousemoveevents
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  playcount
#      type:int  arg:int  canGet:True  canSet:True
#  
#  clicktoplay
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  allowscan
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  enablecontextmenu
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  cursortype
#      type:int  arg:int  canGet:True  canSet:True
#  
#  codeccount
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  allowchangedisplaysize
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  isdurationvalid
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  openstate
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  sendopenstatechangeevents
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  sendwarningevents
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  senderrorevents
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  playstate
#      type:unsupported type 29  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  sendplaystatechangeevents
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  displaysize
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  invokeurls
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  baseurl
#      type:string  arg:string  canGet:True  canSet:True
#  
#  defaultframe
#      type:string  arg:string  canGet:True  canSet:True
#  
#  haserror
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  errordescription
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  errorcode
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  animationatstart
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  transparentatstart
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  volume
#      type:int  arg:int  canGet:True  canSet:True
#  
#  balance
#      type:int  arg:int  canGet:True  canSet:True
#  
#  readystate
#      type:unsupported type 29  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  selectionstart
#      type:double  arg:double  canGet:True  canSet:True
#  
#  selectionend
#      type:double  arg:double  canGet:True  canSet:True
#  
#  showdisplay
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showcontrols
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showpositioncontrols
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showtracker
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  enablepositioncontrols
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  enabletracker
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  enabled
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  displayforecolor
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  displaybackcolor
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  displaymode
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  videoborder3d
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  videoborderwidth
#      type:int  arg:int  canGet:True  canSet:True
#  
#  videobordercolor
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  showgotobar
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showstatusbar
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showcaptioning
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showaudiocontrols
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  captioningid
#      type:string  arg:string  canGet:True  canSet:True
#  
#  mute
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  canpreview
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  previewmode
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  hasmultipleitems
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  language
#      type:int  arg:int  canGet:True  canSet:True
#  
#  audiostream
#      type:int  arg:int  canGet:True  canSet:True
#  
#  samistyle
#      type:string  arg:string  canGet:True  canSet:True
#  
#  samilang
#      type:string  arg:string  canGet:True  canSet:True
#  
#  samifilename
#      type:string  arg:string  canGet:True  canSet:True
#  
#  streamcount
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  clientid
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  connectionspeed
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  autosize
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  enablefullscreencontrols
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  activemovie
#      type:VT_DISPATCH  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  nsplay
#      type:VT_DISPATCH  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  windowlessvideo
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  dvd
#      type:unsupported type 29  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  entrycount
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  
#  
#  
#  METHODS
#  --------------------
#  QueryInterface
#      retType:  VT_VOID
#      params:
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          ppvObj
#              in:False  out:True  optional:False  type:unsupported type 26
#  
#  AddRef
#      retType:  int
#  
#  Release
#      retType:  int
#  
#  GetTypeInfoCount
#      retType:  VT_VOID
#      params:
#          pctinfo
#              in:False  out:True  optional:False  type:int
#  
#  GetTypeInfo
#      retType:  VT_VOID
#      params:
#          itinfo
#              in:True  out:False  optional:False  type:int
#          lcid
#              in:True  out:False  optional:False  type:int
#          pptinfo
#              in:False  out:True  optional:False  type:unsupported type 26
#  
#  GetIDsOfNames
#      retType:  VT_VOID
#      params:
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          rgszNames
#              in:True  out:False  optional:False  type:unsupported type 26
#          cNames
#              in:True  out:False  optional:False  type:int
#          lcid
#              in:True  out:False  optional:False  type:int
#          rgdispid
#              in:False  out:True  optional:False  type:int
#  
#  Invoke
#      retType:  VT_VOID
#      params:
#          dispidMember
#              in:True  out:False  optional:False  type:int
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          lcid
#              in:True  out:False  optional:False  type:int
#          wFlags
#              in:True  out:False  optional:False  type:int
#          pdispparams
#              in:True  out:False  optional:False  type:unsupported type 29
#          pvarResult
#              in:False  out:True  optional:False  type:VT_VARIANT
#          pexcepinfo
#              in:False  out:True  optional:False  type:unsupported type 29
#          puArgErr
#              in:False  out:True  optional:False  type:int
#  
#  Play
#      retType:  VT_VOID
#  
#  Stop
#      retType:  VT_VOID
#  
#  Pause
#      retType:  VT_VOID
#  
#  GetMarkerTime
#      retType:  double
#      params:
#          MarkerNum
#              in:True  out:False  optional:False  type:int
#  
#  GetMarkerName
#      retType:  string
#      params:
#          MarkerNum
#              in:True  out:False  optional:False  type:int
#  
#  AboutBox
#      retType:  VT_VOID
#  
#  GetCodecInstalled
#      retType:  bool
#      params:
#          CodecNum
#              in:True  out:False  optional:False  type:int
#  
#  GetCodecDescription
#      retType:  string
#      params:
#          CodecNum
#              in:True  out:False  optional:False  type:int
#  
#  GetCodecURL
#      retType:  string
#      params:
#          CodecNum
#              in:True  out:False  optional:False  type:int
#  
#  GetMoreInfoURL
#      retType:  string
#      params:
#          MoreInfoType
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  GetMediaInfoString
#      retType:  string
#      params:
#          MediaInfoType
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  Cancel
#      retType:  VT_VOID
#  
#  Open
#      retType:  VT_VOID
#      params:
#          bstrFileName
#              in:True  out:False  optional:False  type:string
#  
#  IsSoundCardEnabled
#      retType:  bool
#  
#  Next
#      retType:  VT_VOID
#  
#  Previous
#      retType:  VT_VOID
#  
#  StreamSelect
#      retType:  VT_VOID
#      params:
#          StreamNum
#              in:True  out:False  optional:False  type:int
#  
#  FastForward
#      retType:  VT_VOID
#  
#  FastReverse
#      retType:  VT_VOID
#  
#  GetStreamName
#      retType:  string
#      params:
#          StreamNum
#              in:True  out:False  optional:False  type:int
#  
#  GetStreamGroup
#      retType:  int
#      params:
#          StreamNum
#              in:True  out:False  optional:False  type:int
#  
#  GetStreamSelected
#      retType:  bool
#      params:
#          StreamNum
#              in:True  out:False  optional:False  type:int
#  
#  GetMediaParameter
#      retType:  string
#      params:
#          EntryNum
#              in:True  out:False  optional:False  type:int
#          bstrParameterName
#              in:True  out:False  optional:False  type:string
#  
#  GetMediaParameterName
#      retType:  string
#      params:
#          EntryNum
#              in:True  out:False  optional:False  type:int
#          Index
#              in:True  out:False  optional:False  type:int
#  
#  GetCurrentEntry
#      retType:  int
#  
#  SetCurrentEntry
#      retType:  VT_VOID
#      params:
#          EntryNumber
#              in:True  out:False  optional:False  type:int
#  
#  ShowDialog
#      retType:  VT_VOID
#      params:
#          mpDialogIndex
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  
#  
#  
#  EVENTS
#  --------------------
#  DVDNotify
#      retType:  VT_VOID
#      params:
#          EventCode
#              in:True  out:False  optional:False  type:int
#          EventParam1
#              in:True  out:False  optional:False  type:int
#          EventParam2
#              in:True  out:False  optional:False  type:int
#  
#  EndOfStream
#      retType:  VT_VOID
#      params:
#          Result
#              in:True  out:False  optional:False  type:int
#  
#  KeyDown
#      retType:  VT_VOID
#      params:
#          KeyCode
#              in:True  out:False  optional:False  type:int
#          ShiftState
#              in:True  out:False  optional:False  type:int
#  
#  KeyUp
#      retType:  VT_VOID
#      params:
#          KeyCode
#              in:True  out:False  optional:False  type:int
#          ShiftState
#              in:True  out:False  optional:False  type:int
#  
#  KeyPress
#      retType:  VT_VOID
#      params:
#          CharacterCode
#              in:True  out:False  optional:False  type:int
#  
#  MouseMove
#      retType:  VT_VOID
#      params:
#          Button
#              in:True  out:False  optional:False  type:int
#          ShiftState
#              in:True  out:False  optional:False  type:int
#          x
#              in:True  out:False  optional:False  type:unsupported type 29
#          y
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  MouseDown
#      retType:  VT_VOID
#      params:
#          Button
#              in:True  out:False  optional:False  type:int
#          ShiftState
#              in:True  out:False  optional:False  type:int
#          x
#              in:True  out:False  optional:False  type:unsupported type 29
#          y
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  MouseUp
#      retType:  VT_VOID
#      params:
#          Button
#              in:True  out:False  optional:False  type:int
#          ShiftState
#              in:True  out:False  optional:False  type:int
#          x
#              in:True  out:False  optional:False  type:unsupported type 29
#          y
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  Click
#      retType:  VT_VOID
#      params:
#          Button
#              in:True  out:False  optional:False  type:int
#          ShiftState
#              in:True  out:False  optional:False  type:int
#          x
#              in:True  out:False  optional:False  type:unsupported type 29
#          y
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  DblClick
#      retType:  VT_VOID
#      params:
#          Button
#              in:True  out:False  optional:False  type:int
#          ShiftState
#              in:True  out:False  optional:False  type:int
#          x
#              in:True  out:False  optional:False  type:unsupported type 29
#          y
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  OpenStateChange
#      retType:  VT_VOID
#      params:
#          OldState
#              in:True  out:False  optional:False  type:int
#          NewState
#              in:True  out:False  optional:False  type:int
#  
#  PlayStateChange
#      retType:  VT_VOID
#      params:
#          OldState
#              in:True  out:False  optional:False  type:int
#          NewState
#              in:True  out:False  optional:False  type:int
#  
#  ScriptCommand
#      retType:  VT_VOID
#      params:
#          scType
#              in:True  out:False  optional:False  type:string
#          Param
#              in:True  out:False  optional:False  type:string
#  
#  Buffering
#      retType:  VT_VOID
#      params:
#          Start
#              in:True  out:False  optional:False  type:bool
#  
#  Error
#      retType:  VT_VOID
#  
#  MarkerHit
#      retType:  VT_VOID
#      params:
#          MarkerNum
#              in:True  out:False  optional:False  type:int
#  
#  Warning
#      retType:  VT_VOID
#      params:
#          WarningType
#              in:True  out:False  optional:False  type:int
#          Param
#              in:True  out:False  optional:False  type:int
#          Description
#              in:True  out:False  optional:False  type:string
#  
#  NewStream
#      retType:  VT_VOID
#  
#  Disconnect
#      retType:  VT_VOID
#      params:
#          Result
#              in:True  out:False  optional:False  type:int
#  
#  PositionChange
#      retType:  VT_VOID
#      params:
#          oldPosition
#              in:True  out:False  optional:False  type:double
#          newPosition
#              in:True  out:False  optional:False  type:double
#  
#  DisplayModeChange
#      retType:  VT_VOID
#  
#  ReadyStateChange
#      retType:  VT_VOID
#      params:
#          ReadyState
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  
#  
#  
